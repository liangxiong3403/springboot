spring:
    #数据库配置信息
    datasource:
        # 引入druid
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://127.0.0.1:3306/springboot?characterEncoding=utf8&useSSL=false
        driverClassName: com.mysql.jdbc.Driver
        username: root
        password: admin
        #druid连接池配置
        #最大活跃数
        maxActive: 20
        #初始化连接数量
        initialSize: 5
        #连接最大超时时间
        maxWait: 60000
        #打开PSCache,并且指定每个连接PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        #通过connectionProperties属性来打开mergeSql功能;慢SQL记录
        #connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        minIdle: 5
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select '1' from dual
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        #配置监控统计拦截的filters，去掉后监控界面sql将无法统计,'wall'用于防火墙
        filters: stat, wall, log4j
    data:
        elasticsearch:
            properties:
                # 配置Elasticsearch安装根路径,也引用使用环境变量(当前SpringBoot兼容的Elasticsearch版本通过mvn dependency:tree查看)
                path:
                    home: E:\development\elasticsearch-2.4.6
                # 配置Elasticsearch配置文件使用的节点名称
                hostname: DESKTOP-4B9JQ0A
    # Redis配置
    redis:
        host: 127.0.0.1
        port: 6379
    #JPA配置
    jpa:
        # 数据库方言
        databasePlatform: org.hibernate.dialect.MySQL5Dialect
        # 数据库名称
        database: MYSQL
        # 控制台打印SQL语句
        show-sql: true
        hibernate:
            ddl-auto: update
            naming:
                implicitStrategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        properties:
            hibernate:
                format_sql: true
    #设置编码格式
    http:
        encoding:
            force: true
        multipart:
            max-file-size: 10MB
            max-request-size: 20MB
    mvc:
        view:
            # 视图访问路径前缀
            prefix: /WEB-INF/jsp/
            # 视图访问路径后缀
            suffix: .jsp
        # Path pattern used for static resources,TODO
        static-path-pattern: /**
    # 静态资源根路径(可以存放网站图标)
    resources:
        static-locations: classpath:/static/
    velocity:
        resource-loader-path: classpath:/velocity/
    # Kafka配置
    kafka:
        # 生产者配置
        producer:
            # Kafka集群地址
            bootstrap-servers: 192.168.1.8:9092,192.168.1.9:9092,192.168.1.10:9092
            # 客户端id
            client-id: KafkaProducer
            # 消息确认方式,需要leaderQuery
            acks: 1
            # key序列化类
            key-serializer: org.apache.kafka.common.serialization.StringSerializer
            # value序列化类
            value-serializer: org.liangxiong.springboot.component.ObjectSerializer
        # 消费者配置
        consumer:
            # Kafka集群地址
            bootstrap-servers: 192.168.1.8:9092,192.168.1.9:9092,192.168.1.10:9092
            # 消息自动提交
            enable-auto-commit: true
            # 消费者所属group
            group-id: KafkaConsumer
            # 消息自动提交间隔时间
            auto-commit-interval: 1000
            # key反序列化类
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            # value反序列化类
            value-deserializer: org.liangxiong.springboot.component.ObjectDeserializer
            # 客户端id
            client-id: liangxiong
    webservices:
        path: /
#web容器的端口号和编码配置
server:
    #修改Tomcat端口号,默认端口号8080
    port: 8086
management:
    port: 9001
lx:
    # 定义数组
    favorite:
        numbers: 6,8,10
    # 获取uuid
    uuid:
        ${random.uuid}
    # 获取范围内int
    number:
        in:
            range: ${random.int[10,20]}
    # 配置属性列表,等同于lx.websites=www.liangxiong.com,www.liangxiong.cn
    websites:
        -  www.liangxiong.cn
        -  www.liangxiong.com
# Spring Boot uses some relaxed rules for binding Environment properties to @ConfigurationProperties beans, so there doesn’t need to be an exact match between the Environment property name and the bean property name
bar:
    first-name: tomcat
logging:
    config: classpath:log/logback-spring.xml
# logback-spring.xml中springProperty需要
user: liangxiong
# security相关配置
security:
    user:
        # 登录账号
        name: admin
        # 登陆密码
        password: 123456
    oauth2:
        client:
            client-id: liangxiong
            client-secret: 111111
    # 关闭Spring Security安全认证
    basic:
        enabled: false
# actuator配置优雅停机
endpoints:
    shutdown:
        enabled: true
# MyBatis相关配置
mybatis:
    # Locations of MyBatis mappers files.
    mapper-locations: classpath:mappers/*.xml
    # 是否检查配置的XML文件
    check-config-location: true
    # 配置别名
    type-aliases-package: org.liangxiong.springboot.entity
    # 配置Java属性和数据库字段驼峰命名映射(针对Annotation和XML都有效)
    configuration:
        map-underscore-to-camel-case: true
pagehelper:
    # 5.0的为helperDialect;老版本为dialect
    helperDialect: MySQL
    # 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页;禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据
    reasonable: true
    # 支持通过Mapper接口参数来传递分页参数
    supportMethodsArguments: true
    params: count=countSql
    autoRuntimeDialect: true
    # 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果
    pageSizeZero: true
    # 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用
    offsetAsPageNum: true
    # 当该参数设置为true时，使用RowBounds分页会进行count查询
    rowBoundsWithCount: true


